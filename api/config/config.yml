

api:
    ## The port the API will listen on. Default is 8080.
    # port: 8080

    ## The secret that will be used to sign JWT tokens. CHANGE THIS VALUE !
    ## A random 128 alphanumeric string is required.
    jwt_secret: "CixLLGVb5u3JC9geHtr289qTDvudTvDR3sBsvdonrt89jXP8MSoEUpiRFKK2w459yUQ6FkAw2XL5svYKJCjBBJhM5BicdSYRprQEpjzSkFssnNr9EJazmZSasKCwZMqB"


    ## Absolute path to the API private key used to sign the vault to guarantee its authenticity.
    ## This must be a PEM encoded RSA private key.
    private_key_path: "secret/private.pem"

    ## Absolute path to the API public key used to verify vault the vault signature before opening it in the frontend.
    ## This must be a PEM encoded RSA public key.
    public_key_path: "secret/public.pem"

    ## Secret used to encrypt flask session.
    ## This must be a random 64 character string.
    flask_secret_key: "6nx3o4SYgxc2t8CGVrUca5kzU6Qqx4uJk6MuCzV9tGafiY6eepVsar7Jdadm7UopTCzPANFRvSSWoYLvmaGqV6dSPV9W4ErTZZAacK5G4KUq2tu9iniLGfhGzgMiV6Pj"

    ## Server side encryption key used to encrypt data stored in the database that is not Encrypted by the ZKE flow
    ## A random 128 alphanumeric string is required.
    server_side_encryption_key: "p+A+pgLguI2b0Mvr96TlL6tRhKsSFVmxk8GqjAXK00Q=" 

    ## Configuration of google drive Oauth. 
    ## See https://developers.google.com/identity/protocols/oauth2 for more information.
    # oauth:
          ## See https://developers.google.com/identity/protocols/oauth2 for more information.
        # client_secret_file_path: "path/to/client_secret.json"





environment:
  ## The environment the API is running in.
  ## This value is used to determine the logging level, CORS and other settings.
  ## Possible values are "local", "development" and "production".
  ## Running non production type can cause security issues.
  type: "production"

database:
    ## The URI of the database to connect to.
    ## The URI must be in the format of "mysql://user:password@host/db_name"
    database_uri: "mysql://api:api@database:3306/zero_totp"



features:

    ## Optional 
    ## Admin features configuration
    admins:
        ## THIS SHOULD BE USED AS A TEMPORARY FEATURE ONLY 
        ## This will allow the admin to delete users, and all their data.
        ## This should be disabled in production, most of the time.
        admin_can_delete_users: false
    
    ## Optional
    ## Email notifications configuration
    emails:
        ## Optional 
        ## Require email validation for new users.
        ## If set to true, users will have to validate their email address before they can use the service.
        ## If set to false, users will be able to use the service without validating their email address.
        require_email_validation: true

        ## Required if require_email_validation is set to true
        ## Configuration of the SMTP server used to send emails.
        email_sender_address: "Zero-TOTP <developer@zero-totp.com>"
        email_smtp_server: "smtp.gmail.com"
        email_smtp_port: "587"
        email_smtp_username: "nathanstchepinsky@gmail.com"
        email_smtp_password: "ptqzfyudppecpbwf"
